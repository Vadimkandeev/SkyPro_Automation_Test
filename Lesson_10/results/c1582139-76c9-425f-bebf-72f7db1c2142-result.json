{"name": "Создание нового сотрудника.", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError: assert 500 == 201", "trace": "@allure.description(\"Создать запись о новом сотруднике. Сделать запрос о создании записи \\\n                        по  API и через БД. В запросе по API намерено указать невалидные данные. \\\n                        Сравнить результаты возвращаемых ответов. Проверить статус-код, возвращаемый по API\")\n    @allure.feature(\"Негативная проверка\")\n    @allure.title(\"Создание нового сотрудника.\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.xfail()\n    def test_invalid_create_new_note_2():\n        with allure.step(\"Задать невалидные данные для запроса\"):\n            company_id = 99999999999999999 #driver.create_company(fake.name(), fake.text(20))\n            first_name = fake.first_name()\n            last_name = fake.last_name()\n            middle_name = fake.first_name()\n            phone = fake.phone_number()\n            url = fake.url()\n        with allure.step(\"Отправить запрос по API\"):\n            nem_worker = driver.employee_post(company_id, first_name, last_name, middle_name, phone, url)\n        with allure.step(\"Сравнить статус ответа с ожидаемым\"):\n>           assert nem_worker[1]== 201\nE           assert 500 == 201\n\ntest_employee_page_1.py:136: AssertionError"}, "description": "Создать запись о новом сотруднике. Сделать запрос о создании записи                     по  API и через БД. В запросе по API намерено указать невалидные данные.                     Сравнить результаты возвращаемых ответов. Проверить статус-код, возвращаемый по API", "steps": [{"name": "Задать невалидные данные для запроса", "status": "passed", "start": 1678199352245, "stop": 1678199352246}, {"name": "Отправить запрос по API", "status": "passed", "start": 1678199352246, "stop": 1678199352755}, {"name": "Сравнить статус ответа с ожидаемым", "status": "failed", "statusDetails": {"message": "AssertionError: assert 500 == 201\n", "trace": "  File \"/Users/vadim/Documents/My_GIT_hub/SkyPro_Automation_Test/Lesson_10/test_employee_page_1.py\", line 136, in test_invalid_create_new_note_2\n    assert nem_worker[1]== 201\n"}, "start": 1678199352755, "stop": 1678199352756}], "start": 1678199352245, "stop": 1678199352756, "uuid": "24cbfa9b-3b6b-4a3e-8869-1a8f34effc60", "historyId": "d04d1c3f8e353f1ba923f067f86ea1b5", "testCaseId": "b5efc8a3ddcfaee428ecaf9e46f1db8e", "fullName": "test_employee_page_1#test_invalid_create_new_note_2", "labels": [{"name": "feature", "value": "Негативная проверка"}, {"name": "severity", "value": "Critical"}, {"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "suite", "value": "test_employee_page_1"}, {"name": "host", "value": "VAdims-Mac-mini.local"}, {"name": "thread", "value": "99325-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_employee_page_1"}]}