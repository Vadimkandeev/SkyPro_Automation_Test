{"uid":"b15f18f3f435d327","name":"Создание нового сотрудника.","fullName":"test_employee_page_1#test_invalid_create_new_note","historyId":"41828e90d9ef6dc134dd870bba47b6e8","time":{"start":1678199351720,"stop":1678199352177,"duration":457},"description":"Создать новую компанию, в этой компании создать запись о новом сотруднике. Сделать запрос о создании                     по  API и через БД. В запросе по API намерено отправить невалидные данные.                     Сравнить результаты возвращаемых ответов. Проверить статус-код, возвращаемый по API","descriptionHtml":"<p>Создать новую компанию, в этой компании создать запись о новом сотруднике. Сделать запрос о создании                     по  API и через БД. В запросе по API намерено отправить невалидные данные.                     Сравнить результаты возвращаемых ответов. Проверить статус-код, возвращаемый по API</p>\n","status":"skipped","statusMessage":"XFAIL\n\nTypeError: EmployeeClass.employee_post() takes 7 positional arguments but 9 were given","statusTrace":"@allure.description(\"Создать новую компанию, в этой компании создать запись о новом сотруднике. Сделать запрос о создании \\\n                        по  API и через БД. В запросе по API намерено отправить невалидные данные. \\\n                        Сравнить результаты возвращаемых ответов. Проверить статус-код, возвращаемый по API\")\n    @allure.feature(\"Негативная проверка\")\n    @allure.title(\"Создание нового сотрудника.\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.xfail()\n    def test_invalid_create_new_note():\n        with allure.step(\"Сформировать невалидные значения для запроса\"):\n            company_id = driver.create_company(fake.name(), fake.text(20))\n            first_name = fake.first_name()\n            last_name = fake.last_name()\n            middle_name = fake.first_name()\n            phone = \"2222222222222\"\n            url = fake.url()\n            godzilla = fake.text(10)\n            date = fake.date_time()\n        with allure.step(\"Сделать запрос по API\"):\n>           driver.employee_post(company_id, first_name, last_name, middle_name, phone, url, godzilla, date)\nE           TypeError: EmployeeClass.employee_post() takes 7 positional arguments but 9 were given\n\ntest_employee_page_1.py:112: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1678199325798,"stop":1678199325841,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Создать новую компанию, в этой компании создать запись о новом сотруднике. Сделать запрос о создании                     по  API и через БД. В запросе по API намерено отправить невалидные данные.                     Сравнить результаты возвращаемых ответов. Проверить статус-код, возвращаемый по API","status":"skipped","statusMessage":"XFAIL\n\nTypeError: EmployeeClass.employee_post() takes 7 positional arguments but 9 were given","statusTrace":"@allure.description(\"Создать новую компанию, в этой компании создать запись о новом сотруднике. Сделать запрос о создании \\\n                        по  API и через БД. В запросе по API намерено отправить невалидные данные. \\\n                        Сравнить результаты возвращаемых ответов. Проверить статус-код, возвращаемый по API\")\n    @allure.feature(\"Негативная проверка\")\n    @allure.title(\"Создание нового сотрудника.\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.xfail()\n    def test_invalid_create_new_note():\n        with allure.step(\"Сформировать невалидные значения для запроса\"):\n            company_id = driver.create_company(fake.name(), fake.text(20))\n            first_name = fake.first_name()\n            last_name = fake.last_name()\n            middle_name = fake.first_name()\n            phone = \"2222222222222\"\n            url = fake.url()\n            godzilla = fake.text(10)\n            date = fake.date_time()\n        with allure.step(\"Сделать запрос по API\"):\n>           driver.employee_post(company_id, first_name, last_name, middle_name, phone, url, godzilla, date)\nE           TypeError: EmployeeClass.employee_post() takes 7 positional arguments but 9 were given\n\ntest_employee_page_1.py:112: TypeError","steps":[{"name":"Сформировать невалидные значения для запроса","time":{"start":1678199351720,"stop":1678199352175,"duration":455},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Сделать запрос по API","time":{"start":1678199352175,"stop":1678199352175,"duration":0},"status":"broken","statusMessage":"TypeError: EmployeeClass.employee_post() takes 7 positional arguments but 9 were given\n","statusTrace":"  File \"/Users/vadim/Documents/My_GIT_hub/SkyPro_Automation_Test/Lesson_10/test_employee_page_1.py\", line 112, in test_invalid_create_new_note\n    driver.employee_post(company_id, first_name, last_name, middle_name, phone, url, godzilla, date)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"Негативная проверка"},{"name":"severity","value":"Critical"},{"name":"tag","value":"@pytest.mark.xfail"},{"name":"suite","value":"test_employee_page_1"},{"name":"host","value":"VAdims-Mac-mini.local"},{"name":"thread","value":"99325-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_employee_page_1"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[],"tags":["@pytest.mark.xfail"]},"source":"b15f18f3f435d327.json","parameterValues":[]}